<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Select Group and Filter" Height="600" Width="800" Background="#f3f3f3"
        WindowStartupLocation="CenterScreen" Topmost="True"
        ShowInTaskbar="True" WindowStyle="SingleBorderWindow" ResizeMode="CanResize">
    <Window.Resources>
        <!-- Base button style with rounded corners -->
        <Style TargetType="Button" x:Key="BaseButtonStyle">
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderBrush" Value="#007ACC"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#005A9E"/>
                    <Setter Property="BorderBrush" Value="#005A9E"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#DDDDDD"/>
                    <Setter Property="Foreground" Value="#888888"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Sidebar button style -->
        <Style TargetType="Button" x:Key="SidebarButtonStyle" BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="Width" Value="200"/>
        </Style>
        <!-- Base ToggleButton style with rounded corners -->
        <Style x:Key="BaseToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderBrush" Value="#007ACC"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#005A9E"/>
                    <Setter Property="BorderBrush" Value="#005A9E"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#DDDDDD"/>
                    <Setter Property="Foreground" Value="#888888"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Sidebar toggle style for context selection -->
        <Style x:Key="SidebarToggleStyle" TargetType="ToggleButton" BasedOn="{StaticResource BaseToggleButtonStyle}">
            <Setter Property="Width" Value="200"/>
            <Setter Property="Margin" Value="5"/>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="#005A9E"/>
                    <Setter Property="BorderBrush" Value="#005A9E"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Define textblock styles -->
        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <!-- Define combobox styles to look like button -->
        <Style TargetType="ComboBox" x:Key="ComboBoxButtonStyle">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Height" Value="30"/>
        </Style>
        <!-- Define textbox styles with rounded corners -->
        <Style TargetType="TextBox">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#007ACC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Style for mode toggle buttons (Actions/Reports) -->
        <Style x:Key="ModeToggleStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderBrush" Value="#007ACC"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="12"/>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="#007ACC"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Segmented control templates for modern unified button -->
        <ControlTemplate x:Key="LeftSegmentToggleTemplate" TargetType="ToggleButton">
            <Border x:Name="Border" CornerRadius="5,0,0,5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#007ACC"/>
                    <Setter TargetName="Border" Property="BorderBrush" Value="#007ACC"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="RightSegmentToggleTemplate" TargetType="ToggleButton">
            <Border x:Name="Border" CornerRadius="0,5,5,0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#007ACC"/>
                    <Setter Property="BorderBrush" Value="#007ACC"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- Styles for left and right segments -->
        <Style x:Key="SegmentLeftStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderBrush" Value="#007ACC"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Template" Value="{StaticResource LeftSegmentToggleTemplate}"/>
        </Style>
        <Style x:Key="SegmentRightStyle" TargetType="ToggleButton" BasedOn="{StaticResource SegmentLeftStyle}">
            <Setter Property="Template" Value="{StaticResource RightSegmentToggleTemplate}"/>
        </Style>
    </Window.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/> <!-- Additional row for Intent ComboBox -->
            <RowDefinition Height="Auto"/> <!-- Notifications label -->
            <RowDefinition Height="Auto"/> <!-- Notifications dropdown -->
            <RowDefinition Height="Auto"/> <!-- Delivery label -->
            <RowDefinition Height="Auto"/> <!-- Delivery dropdown -->
            <RowDefinition Height="Auto"/> <!-- Button row -->
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <TextBlock Text="Search Group:" Margin="5" HorizontalAlignment="Left"/>
        <TextBox x:Name="GroupSearchBox" Grid.Row="1" Margin="5" HorizontalAlignment="Stretch">
            <TextBox.ToolTip>
                <ToolTip Content="Search Group"/>
            </TextBox.ToolTip>
        </TextBox>
        <TextBlock Text="Select Group:" Margin="5" Grid.Row="2" HorizontalAlignment="Left"/>
        <ComboBox x:Name="GroupComboBox" Grid.Row="3" Margin="5" Style="{StaticResource ComboBoxButtonStyle}" HorizontalAlignment="Stretch"/>

        <TextBlock Text="Select Filter (Optional):" Grid.Row="4" Margin="5" HorizontalAlignment="Left"/>
        <ComboBox x:Name="FilterComboBox" Grid.Row="5" Margin="5" Style="{StaticResource ComboBoxButtonStyle}" HorizontalAlignment="Stretch"/>

        <TextBlock Text="Select Filter Type (Optional):" Grid.Row="6" Margin="5" HorizontalAlignment="Left"/>
        <ComboBox x:Name="FilterTypeComboBox" Grid.Row="7" Margin="5" Style="{StaticResource ComboBoxButtonStyle}" HorizontalAlignment="Stretch"/>

        <TextBlock Text="Assignment Type:" Grid.Row="8" Margin="5" HorizontalAlignment="Left"/>
        <ComboBox x:Name="AssignmentTypeComboBox" Grid.Row="9" Margin="5" SelectedIndex="0" Style="{StaticResource ComboBoxButtonStyle}" HorizontalAlignment="Stretch">
            <ComboBoxItem Content="Include"/>
            <ComboBoxItem Content="Exclude"/>
        </ComboBox>

        <!-- New Intent ComboBox -->
        <TextBlock Text="Install Intent:" Grid.Row="10" Margin="5" Visibility="Collapsed" x:Name="IntentTextBlock" HorizontalAlignment="Left"/>
        <ComboBox x:Name="IntentComboBox" Grid.Row="11" Margin="5" Visibility="Collapsed" SelectedIndex="0" Style="{StaticResource ComboBoxButtonStyle}" HorizontalAlignment="Stretch">
            <ComboBoxItem Content="Available"/>
            <ComboBoxItem Content="Required"/>
            <ComboBoxItem Content="Uninstall"/>
        </ComboBox>
        <!-- Notifications controls for Win32 LOB App -->
        <TextBlock x:Name="NotificationsTextBlock" Text="Notifications:" Grid.Row="13" Margin="5" Visibility="Collapsed" HorizontalAlignment="Left"/>
        <ComboBox x:Name="NotificationsComboBox" Grid.Row="14" Margin="5" Visibility="Collapsed" Style="{StaticResource ComboBoxButtonStyle}" HorizontalAlignment="Stretch"/>
        <TextBlock x:Name="DeliveryTextBlock" Text="Delivery Optimization Priority:" Grid.Row="15" Margin="5" Visibility="Collapsed" HorizontalAlignment="Left"/>
        <ComboBox x:Name="DeliveryComboBox" Grid.Row="16" Margin="5" Visibility="Collapsed" Style="{StaticResource ComboBoxButtonStyle}" HorizontalAlignment="Stretch"/>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="17" Margin="5">
            <Button x:Name="AddExtraAssignmentButton" Content="Add Extra Assignment" Width="180" Style="{StaticResource BaseButtonStyle}"/>
            <Button x:Name="OkButton" Content="OK" Width="80" Style="{StaticResource BaseButtonStyle}"/>
            <Button x:Name="CancelButton" Content="Cancel" Width="80" Style="{StaticResource BaseButtonStyle}"/>
        </StackPanel>
    </Grid>
</Window>
