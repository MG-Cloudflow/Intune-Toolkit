<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Intune-Toolkit" Height="800" Width="1200" Background="#f3f3f3">
    <Window.Resources>
        <!-- Base button style with rounded corners -->
        <Style TargetType="Button" x:Key="BaseButtonStyle">
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderBrush" Value="#007ACC"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="12"/>
            <!-- Rounded corner template -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="1" 
                                CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Hover effect -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#005A9E"/>
                    <Setter Property="BorderBrush" Value="#005A9E"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#DDDDDD"/>
                    <Setter Property="Foreground" Value="#888888"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Sidebar button style -->
        <Style TargetType="Button" x:Key="SidebarButtonStyle" BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="Width" Value="200"/> <!-- Fixed width for sidebar buttons -->
        </Style>
        <!-- Base ToggleButton style with rounded corners -->
        <Style x:Key="BaseToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderBrush" Value="#007ACC"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Hover effect -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#005A9E"/>
                    <Setter Property="BorderBrush" Value="#005A9E"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#DDDDDD"/>
                    <Setter Property="Foreground" Value="#888888"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Sidebar toggle style for context selection -->
        <Style x:Key="SidebarToggleStyle" TargetType="ToggleButton" BasedOn="{StaticResource BaseToggleButtonStyle}">
            <Setter Property="Width" Value="200"/>
            <Setter Property="Margin" Value="5"/>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="#005A9E"/>
                    <Setter Property="BorderBrush" Value="#005A9E"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Define textblock styles -->
        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <!-- Define combobox styles to look like button -->
        <!-- Combobox style reverted to default template to enable dropdown functionality -->
        <Style TargetType="ComboBox" x:Key="ComboBoxButtonStyle">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Height" Value="30"/>
        </Style>
        <!-- Define textbox styles with rounded corners -->
        <Style TargetType="TextBox">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#007ACC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Style for mode toggle buttons (Actions/Reports) -->
        <Style x:Key="ModeToggleStyle" TargetType="ToggleButton">
            <!-- Base button appearance -->
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderBrush" Value="#007ACC"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="12"/>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="#007ACC"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Segmented control templates for modern unified button -->
        <ControlTemplate x:Key="LeftSegmentToggleTemplate" TargetType="ToggleButton">
            <Border x:Name="Border" CornerRadius="5,0,0,5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#007ACC"/>
                    <Setter TargetName="Border" Property="BorderBrush" Value="#007ACC"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="RightSegmentToggleTemplate" TargetType="ToggleButton">
            <Border x:Name="Border" CornerRadius="0,5,5,0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="#007ACC"/>
                    <Setter TargetName="Border" Property="BorderBrush" Value="#007ACC"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- Styles for left and right segments -->
        <Style x:Key="SegmentLeftStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderBrush" Value="#007ACC"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Template" Value="{StaticResource LeftSegmentToggleTemplate}"/>
        </Style>
        <Style x:Key="SegmentRightStyle" TargetType="ToggleButton" BasedOn="{StaticResource SegmentLeftStyle}">
            <Setter Property="Template" Value="{StaticResource RightSegmentToggleTemplate}"/>
        </Style>
    </Window.Resources>

    <Grid Margin="20">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <!-- Sidebar: unified, scrollable and spanning full height -->
        <ScrollViewer Grid.Column="0" Grid.Row="0" Grid.RowSpan="4" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Margin="10">
            <StackPanel Orientation="Vertical">
                <Button x:Name="ConnectButton" Content="Connect to Graph" Style="{StaticResource SidebarButtonStyle}" IsEnabled="True"/>
                <Button x:Name="ConnectEnterpriseAppButton" Content="Connect to Graph App" Style="{StaticResource SidebarButtonStyle}" IsEnabled="True"/>
                <Button x:Name="LogoutButton" Content="Logout" Style="{StaticResource SidebarButtonStyle}" IsEnabled="False"/>
                <!-- Alphabetically ordered toggle buttons by Content -->
                <ToggleButton x:Name="AdminTemplatesButton" Content="Administrative Templates" Style="{StaticResource SidebarToggleStyle}" IsEnabled="False" Margin="5,20,5,5"/>
                <ToggleButton x:Name="AppConfigButton" Content="App configuration policies" Style="{StaticResource SidebarToggleStyle}" IsEnabled="False"/>
                <ToggleButton x:Name="ApplicationsButton" Content="Applications" Style="{StaticResource SidebarToggleStyle}" IsEnabled="False"/>
                <ToggleButton x:Name="AutopilotProfilesButton" Content="Autopilot Profiles" Style="{StaticResource SidebarToggleStyle}" IsEnabled="False"/>
                <ToggleButton x:Name="ComplianceButton" Content="Compliance" Style="{StaticResource SidebarToggleStyle}" IsEnabled="False"/>
                <ToggleButton x:Name="DeviceConfigurationButton" Content="Device Configuration" Style="{StaticResource SidebarToggleStyle}" IsEnabled="False"/>
                <ToggleButton x:Name="IntentsButton" Content="Endpoint Security" Style="{StaticResource SidebarToggleStyle}" IsEnabled="False"/>
                <ToggleButton x:Name="DeviceCustomAttributeShellScriptsButton" Content="macOS Custom Attributes" Style="{StaticResource SidebarToggleStyle}" IsEnabled="False"/>
                <ToggleButton x:Name="MacosScriptsButton" Content="macOS Scripts" Style="{StaticResource SidebarToggleStyle}" IsEnabled="False"/>
                <ToggleButton x:Name="PlatformScriptsButton" Content="Platform Scripts" Style="{StaticResource SidebarToggleStyle}" IsEnabled="False"/>
                <ToggleButton x:Name="RemediationScriptsButton" Content="Remediation Scripts" Style="{StaticResource SidebarToggleStyle}" IsEnabled="False"/>
                <ToggleButton x:Name="ConfigurationPoliciesButton" Content="Settings Catalog" Style="{StaticResource SidebarToggleStyle}" IsEnabled="False"/>
            </StackPanel>
        </ScrollViewer>
        <Grid Grid.Row="0" Grid.Column="1" Margin="10">
    <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal" Grid.Row="0">
                <TextBlock x:Name="TenantInfo" Text="" VerticalAlignment="Center" Margin="5"/>
            </StackPanel>
            <Button x:Name="RefreshButton" Content="↻" Style="{StaticResource BaseButtonStyle}" IsEnabled="False" Width="30" Height="30" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="5" Grid.Row="0" Grid.Column="1"/>
    <!-- Base search row: only field and term inputs -->
    <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="10,0,10,0">
        <ComboBox x:Name="SearchFieldComboBox" Width="150" SelectedIndex="0" IsEnabled="False" Style="{StaticResource ComboBoxButtonStyle}" Margin="0,0,4,0"/>
        <TextBox x:Name="SearchBox" Width="300" IsEnabled="False" Style="{StaticResource {x:Type TextBox}}"/>
    </StackPanel>
    <!-- Dynamic filter clauses -->
    <StackPanel x:Name="AdditionalFiltersPanel" Grid.Row="2" Orientation="Vertical" Margin="5"/>
    <!-- Controls: add/remove/search -->
    <StackPanel Orientation="Horizontal" Grid.Row="3" Margin="10,0,10,0">
        <Button x:Name="AddFilterButton" Content="+" Width="30" Style="{StaticResource BaseButtonStyle}" IsEnabled="False" Margin="0,0,2,0"/>
        <Button x:Name="SearchButton" Content="Search" Width="80" Style="{StaticResource BaseButtonStyle}" IsEnabled="False"/>
    </StackPanel>
        </Grid>
        <TextBlock x:Name="StatusText" Text="Please login to Graph before using the app" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="2" Grid.Column="1"/>
        <DataGrid x:Name="PolicyDataGrid" AutoGenerateColumns="False" Grid.Row="2" Grid.Column="1" Margin="10" IsReadOnly="True" SelectionMode="Extended" Visibility="Hidden" RowHeight="20" MinRowHeight="20">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Policy Name" Binding="{Binding PolicyName}" Width="*"/>
                <DataGridTextColumn Header="Description" Binding="{Binding PolicyDescription}" Width="*"/>
                <DataGridTextColumn Header="Platform" Binding="{Binding Platform}" Width="*" />
                <DataGridTextColumn Header="Application Type" Binding="{Binding ApplicationType}" Width="*" Visibility="Collapsed"/>
                <DataGridTextColumn Header="Assignment Type" Binding="{Binding AssignmentType}" Width="*"/>
                <DataGridTextColumn Header="Group Display Name" Binding="{Binding GroupDisplayname}" Width="*"/>
                <DataGridTextColumn Header="Filter Display Name" Binding="{Binding FilterDisplayname}" Width="*"/>
                <DataGridTextColumn Header="Filter Type" Binding="{Binding FilterType}" Width="*"/>
                <DataGridTextColumn Header="Install Intent" Binding="{Binding InstallIntent}" Width="*" Visibility="Collapsed"/>
            </DataGrid.Columns>
        </DataGrid>
        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Grid.Row="3" Grid.Column="1" Margin="10">
            <StackPanel Orientation="Horizontal" Margin="0,3,0,0">
                <Button x:Name="RenameButton" Content="Edit Name/Description" Width="150" Style="{StaticResource BaseButtonStyle}" IsEnabled="False"/>
                <Button x:Name="DeleteAssignmentButton" Content="Delete Assignment" Width="150" Style="{StaticResource BaseButtonStyle}" IsEnabled="False"/>
                <Button x:Name="AddAssignmentButton" Content="Add Assignment" Width="150" Style="{StaticResource BaseButtonStyle}" IsEnabled="False"/>
                <Button x:Name="SecurityBaselineAnalysisButton" Content="Comparison Report" Width="150" Style="{StaticResource BaseButtonStyle}" IsEnabled="False"/>
                <Button x:Name="SettingsReportButton" Content="Settings Report" Width="150" Style="{StaticResource BaseButtonStyle}" IsEnabled="False"/>
                <Button x:Name="BackupButton" Content="Backup Assignments" Width="150" Style="{StaticResource BaseButtonStyle}" IsEnabled="False"/>
                <Button x:Name="RestoreButton" Content="Restore Assignments" Width="150" Style="{StaticResource BaseButtonStyle}" IsEnabled="False"/>
                <!-- Replace separate exports with unified AssignmentReport button -->
                <Button x:Name="AssignmentReportButton" Content="Assignment Report" Width="150" Style="{StaticResource BaseButtonStyle}" IsEnabled="False"/>
            </StackPanel>
        </StackPanel>
        <!-- Mode toggle between Actions and Reports at bottom left (segmented control) -->
        <StackPanel Orientation="Horizontal" Grid.Row="4" Grid.Column="0" HorizontalAlignment="Left" Margin="25,10,5,5">
            <ToggleButton x:Name="ActionsToggle" Style="{StaticResource SegmentLeftStyle}" IsChecked="True" Content="Actions"/>
            <ToggleButton x:Name="ReportsToggle" Style="{StaticResource SegmentRightStyle}" IsChecked="False" Content="Reports"/>
        </StackPanel>
        <Border Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="4" Height="30" Margin="0,5,0,0">
                <TextBlock x:Name="ToolkitVersion" Text="" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5"/>
        </Border>
    </Grid>
</Window>